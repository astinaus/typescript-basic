// 배열의 타입지정
// 배열도 변수와 마찬가지로 타입을 지정할 수 있으며, 타입의 명시적 지정과 초기화를 통한 타입 추론이 모두 가능하다.
const members: string[] = ['Kim', 'Lee', 'Park'];

// 서로 다른 타입의 요소로 타입이 지정되면 해당 배열에는 순서에 상관없이 지정된 타입들의 요소를 저장할 수 있다.
const myArr = ['Hello', 2023];

console.log(myArr[0]); // 'Hello'
console.log(myArr[1]); // 2023
myArr[2] = 2024;
myArr[3] = 'World';
// myArr[4] = true; // 에러가 발생한다.

// 튜플 Tuples
// 튜플을 이용하면 배열의 요소 수와 각 요소에 대한 타입을 지정할 수 있다.
// 배열은 가변적이지만 튜플은 불변적이다.
// 튜플은 정해진 길이에 맞지 않으면 에러가 발생한다. 하지만 push() 메소드를 사용하면 튜플의 규칙이 무시된다.
// 서로 다른 타입의 요소를 갖는 배열은 순서에 상관없이 데이터를 저장할 수 있지만, 튜플은 순서에 맞게 데이터를 저장해야 한다.
// 튜플 타입은 배열보다 저장되는 요소의 순서와 수에 대해 제약을 두고자 할 때 사용한다.
const tuples: [string, number] = ['Han', 2023];

tuples[0] = 'Park'; // OK
// tuples[1] = '2024'; // 에러가 발생한다.

tuples.push('2024'); // OK
console.log(tuples); // ['Park', 2023, '2024']